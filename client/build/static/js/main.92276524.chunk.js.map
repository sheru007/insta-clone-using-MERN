{"version":3,"sources":["components/Navbar.js","components/screens/Home.js","components/screens/Profile.js","components/screens/UserProfile.js","components/screens/SignIn.js","components/screens/Signup.js","components/screens/CreatePost.js","components/screens/SubscribesUserPosts.js","components/screens/Reset.js","components/screens/Newpassword.js","components/screens/VerifyEmail.js","reducers/userReducer.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","searchModal","useRef","state","dispatch","useContext","UserContext","history","useHistory","search","setSearch","useState","userDetails","setUserDetails","useEffect","M","Modal","init","current","React","createElement","className","Link","to","id","key","data-target","style","color","width","height","borderRadius","margin","border","src","pic","alt","onClick","localStorage","clear","type","push","class","ref","placeholder","value","onChange","e","fetchUser","query","target","fetch","method","headers","getItem","body","JSON","stringify","then","res","json","result","user","map","item","_id","getInstance","close","name","Home","likebtn","data","setData","posts","padding","borderBottom","postedBy","float","deletePost","postId","concat","newData","filter","photo","title","likes","includes","UnlikePost","catch","err","console","log","likePost","list","bookmark","some","payload","setItem","RemoveBookmark","addBookmark","length","comments","record","fontWeight","deleteComment","commentId","text","onSubmit","makeComment","preventDefault","Profile","mypics","setMypics","image","setImage","Tabs","myposts","FormData","append","url","maxWidth","display","justifyContent","email","followers","following","updatePhoto","filee","files","href","UserProfile","userProfile","setProfile","showfollow","setShowFollow","userid","useParams","Fragment","post","unfollowId","prevState","newFollowers","followId","Signin","password","setPassword","setEmail","PostData","test","toast","html","classes","error","token","Signup","setName","setUrl","undefined","uploadFields","message","uploadPic","CreatePost","setBody","setTitle","textAlign","postDetails","SubscribedPosts","Reset","Newpassword","VerifyEmail","reducer","action","createContext","Routing","parse","location","pathname","startsWith","Switch","Route","exact","path","App","useReducer","Provider","BrowserRouter","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.92276524.chunk.js","sourcesContent":["import React,{useContext, useRef, useEffect, useState} from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport {UserContext} from \"../App\"\nimport M from 'materialize-css'\n\nconst NavBar = () => {\n\n    const searchModal = useRef(null)\n    const {state, dispatch}  = useContext(UserContext)\n    const history = useHistory()\n    const [search, setSearch] = useState(\"\")\n    const [userDetails, setUserDetails] = useState([])\n    \n    useEffect(()=>{\n        M.Modal.init(searchModal.current)\n    },[])\n\n    const renderList = ()=>{\n        if(state)\n        {\n            return [\n                <li key=\"1\"><i data-target=\"modal1\" className=\"large material-icons modal-trigger\" style={{color:\"black\"}}>search</i></li>,\n\n                \n                <li key=\"2\"><Link to=\"/createpost\">Create Post</Link></li>,\n                <li key=\"3\"><Link to=\"/subscribedposts\">Subscribed Posts</Link></li>,\n                <li key=\"4\">\n                    <Link to=\"/profile\">\n                        <img style={{ width: \"40px\", height: \"40px\", borderRadius: \"80px\", margin: \"13px -9px 2px -11px\", border: \"2px solid black\" }}\n                                        src={state.pic}\n                                        alt=\"dp\"\n                        />\n                    </Link>\n                </li>,\n                <li key=\"5\">\n                    <button className=\"btn waves-effect waves-light .#6a1b9a purple darken-3\" \n                    onClick={()=>{\n                        localStorage.clear()\n                        dispatch({type:\"CLEAR\"})\n                        history.push('/signin')\n                    }}\n                    >\n                    Logout\n                    \n                    </button>\n                </li>\n                \n            ]\n        }\n        else{\n            return [\n                <li key=\"6\"><Link to=\"/signin\">Sign-in</Link></li>,\n                <li key=\"7\"><Link to=\"/signup\">Sign-up</Link></li>\n            ]\n        }\n    }\n\n    const fetchUser = (query)=>{\n        setSearch(query)\n        fetch('/search-users',{\n            method:\"post\",\n            headers:{\n                \"Content-Type\":\"application/json\",\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n            },\n            body:JSON.stringify({\n                query\n\n            })       \n        }).then(res=>res.json())\n        .then(result=>{\n            // console.log(result)\n            setUserDetails(result.user)\n        })\n\n    }\n\n    return (\n        <nav>\n            <div className=\"nav-wrapper white\">\n                <Link to={state?\"/\":\"/signin\"} className=\"brand-logo left\">apnaInsta</Link>\n                <ul id=\"nav-mobile\" className=\"right\">\n                   {renderList()}\n                    \n                </ul>\n            </div>\n            <div id=\"modal1\" class=\"modal\" ref={searchModal} style={{color:\"black\"}}>\n                <div className=\"modal-content\">\n                    <input \n                    type=\"text\" \n                    placeholder=\"search user\"\n                    value={search}\n                    onChange = {(e)=>fetchUser(e.target.value)}\n                    />\n                     <ul className=\"collection\">\n                        {   userDetails &&\n                            userDetails.map(item=>{\n\n                                return <Link to={item._id === state._id?\"/profile\":\"/profile/\"+item._id}>\n                                            <li className=\"collection-item\" onClick={()=>{\n                                                    M.Modal.getInstance(searchModal.current).close()\n                                                    setSearch(\"\")\n                                                }}>\n                                                <img style={{ width: \"40px\", height: \"40px\", borderRadius: \"80px\", margin:\"1px 4px -7px 3px\",border:\"2px solid black\"}}\n                                                            src={item.pic}\n                                                            alt=\"dp\"\n                                                />\n                                                {item.name}\n                                            </li>\n                                        </Link>\n                            })\n                            \n                        }\n                        \n                        \n                    </ul>\n                </div>\n                <div className=\"modal-footer\">\n                    <button className=\"modal-close waves-effect waves-green btn-flat\" onClick={()=>setSearch(\"\")}>close</button>\n                </div>\n            </div>\n        </nav>\n    )\n}\n\nexport default NavBar","import React, { useState, useEffect, useContext, useRef } from 'react'\nimport { UserContext } from '../../App'\nimport { Link } from 'react-router-dom'\nconst Home = () => {\n    const likebtn = useRef(null)\n    const [data, setData] = useState([])\n    const { state, dispatch } = useContext(UserContext)\n    \n\n    useEffect(() => {\n\n\n        fetch(\"/allpost\", {\n            headers: {\n\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n            }\n\n        }).then(res => res.json())\n            .then(result => {\n                // console.log(result)\n                setData(result.posts)\n\n            })\n    }, [])\n\n\n    const addBookmark = (id) => {\n\n        fetch('/addbookmark', {\n            method: \"put\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n            },\n            body: JSON.stringify({\n                postId: id\n            })\n        }).then(res => res.json())\n            .then(result => {\n                // console.log(result)\n\n                dispatch({type:\"UPDATEBM\",payload:{bookmark:result.bookmark}})\n                localStorage.setItem(\"user\",JSON.stringify(result))\n\n                \n            }).catch(err => {\n                console.log(err)\n            })\n    }\n\n    const RemoveBookmark = (id) => {\n\n        fetch('/removebookmark', {\n            method: \"put\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n            },\n            body: JSON.stringify({\n                postId: id\n            })\n        }).then(res => res.json())\n            .then(result => {\n                // console.log(result)\n                \n                dispatch({type:\"UPDATEBM\",payload:{bookmark:result.bookmark}})\n                localStorage.setItem(\"user\",JSON.stringify(result))\n                \n            }).catch(err => {\n                console.log(err)\n            })\n    }\n\n\n\n    const likePost = (id) => {\n        \n        fetch('/like', {\n            method: \"put\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n            },\n            body: JSON.stringify({\n                postId: id\n            })\n        }).then(res => res.json())\n            .then(result => {\n                // console.log(result)\n                const newData = data.map(item => {\n                    if (item._id === result._id) {\n                        return result\n                    }\n                    else {\n                        return item\n                    }\n                })\n                setData(newData)\n            }).catch(err => {\n                console.log(err)\n            })\n    }\n\n    const UnlikePost = (id) => {\n\n        fetch('/unlike', {\n            method: \"put\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n            },\n            body: JSON.stringify({\n                postId: id\n            })\n        }).then(res => res.json())\n            .then(result => {\n                // console.log(result)\n                const newData = data.map(item => {\n                    if (item._id === result._id) {\n                        return result\n                    }\n                    else {\n                        return item\n                    }\n                })\n                setData(newData)\n            }).catch(err => {\n                console.log(err)\n            })\n    }\n\n\n    const makeComment = (text, postId) => {\n\n        if (text === \"\")\n            return\n\n        \n        fetch('/comment', {\n            method: \"put\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n            },\n            body: JSON.stringify({\n                postId,\n                text\n            })\n\n        }).then(res => res.json())\n            .then(result => {\n                // console.log(result)\n                const newData = data.map(item => {\n                    if (item._id === result._id) {\n                        return result\n                    }\n                    else {\n                        return item\n                    }\n                })\n                setData(newData)\n                \n\n            }).catch(err => {\n                console.log(err)\n            })\n    }\n\n    const deletePost = (postId) => {\n\n\n        fetch(`/deletepost/${postId}`, {\n            method: \"delete\",\n            headers: {\n\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n            }\n\n        }).then(res => res.json())\n            .then(result => {\n                // console.log(result)\n                const newData = data.filter(item => {\n                    return item._id !== result._id\n                })\n                setData(newData)\n            })\n    }\n\n    const deleteComment = (postId, commentId) => {\n\n        fetch('/deletecomment', {\n            method: \"put\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n            },\n            body: JSON.stringify({\n                postId,\n                commentId\n            })\n\n        }).then(res => res.json())\n            .then(result => {\n                // console.log(result)\n                const newData = data.map(item => {\n                    if (item._id === result._id) {\n                        return result\n                    }\n                    else {\n                        return item\n                    }\n                })\n                setData(newData)\n\n            }).catch(err => {\n                console.log(err)\n            })\n    }\n\n    function check(list, id)\n    {\n        return (list.some(item=>item._id===id))\n    }\n    return (\n        <div className=\"home\">\n            {\n                data.map(item => {\n                    return (\n\n                        <div className=\"card home-card\" key={item._id}>\n\n\n                            <h5 style={{ padding: \"6px\", borderBottom: \"1px solid grey\" }}>\n                                <img style={{ width: \"40px\", height: \"40px\", borderRadius: \"80px\", margin: \"1px 4px -7px 3px\", border: \"2px solid black\" }}\n                                    src={item.postedBy.pic}\n                                    alt=\"dp\"\n                                />\n\n                                <Link to={item.postedBy._id !== state._id ? \"/profile/\" + item.postedBy._id : \"/profile\"}>{item.postedBy.name}</Link>\n\n                                {\n                                    item.postedBy._id === state._id &&\n                                    <i className=\"material-icons\"\n                                        style={{ float: \"right\" }}\n                                        onClick={() => deletePost(item._id)}\n                                    >delete</i>\n                                }\n                            </h5>\n\n                            <div className=\"card-image\">\n                                <img key={item._id} src={item.photo} alt={item.title} />\n                            </div>\n                            <div className=\"card-content\">\n\n                                {item.likes.includes(state._id)\n                                    ?\n                                    <i ref={likebtn} className=\"material-icons\"\n                                        onClick={() => UnlikePost(item._id)}\n                                    >thumb_down</i>\n                                    :\n\n                                    <i className=\"material-icons\"\n                                        onClick={() => likePost(item._id)}\n                                    >thumb_up</i>\n                                }\n                                \n                                {   check(state.bookmark, item._id)\n                                    ?\n                                    <i className=\"material-icons\"\n                                        style={{ float: \"right\" }}\n                                        onClick={() => RemoveBookmark(item._id)}\n                                    >bookmark</i>\n                                    :\n                                    <i className=\"material-icons\"\n                                    style={{ float: \"right\" }}\n                                    onClick={() => addBookmark(item._id)}\n                                    >bookmark_border</i>\n                                    \n                                    \n                                }\n                                \n\n\n                                <h6>{item.likes.length} likes</h6>\n                                <h6>{item.title}</h6>\n                                <p>{item.body}</p>\n                                {\n                                    item.comments.map(record => {\n\n                                        return (\n                                            <h6 key={record.key}><span style={{ fontWeight: \"500\" }}>{record.postedBy.name}</span>\n                                                {\n                                                    record.postedBy._id === state._id &&\n                                                    <i className=\"material-icons\"\n                                                        style={{ float: \"right\" }}\n                                                        onClick={() => deleteComment(item._id, record._id)}\n                                                    >delete</i>\n                                                } {record.text}\n                                            </h6>\n\n                                        )\n                                    })\n                                }\n                                <form onSubmit={(e) => {\n                                    e.preventDefault()\n                                    makeComment(e.target[0].value, item._id)\n                                    e.target[0].value = \"\"\n                                }}>\n                                    <input type=\"text\" placeholder=\"add a comment!!\" />\n                                </form>\n                            </div>\n                        </div>\n\n                    )\n                })\n            }\n\n\n\n        </div>\n    )\n}\nexport default Home","import React, { useState, useEffect, useContext, useRef } from 'react'\nimport { UserContext } from '../../App'\nimport M from 'materialize-css'\n\n\nconst Profile = () => {\n\n    const [mypics, setMypics] = useState([])\n    \n    const { state, dispatch } = useContext(UserContext)\n    const [image,setImage] = useState(\"\")\n    const searchModal = useRef(null)\n    useEffect(()=>{\n        M.Tabs.init(searchModal.current)\n    },[])\n\n    useEffect(() => {\n        \n       \n\n        fetch('/mypost', {\n            headers: {\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n            }\n        }).then(res => res.json())\n            .then(result => {\n                // console.log(result)\n                setMypics(result.myposts)\n                // console.log(window.location.protocol)\n                \n            })\n    }, [])\n\n    useEffect(()=>{\n        if(image)\n        {\n            const data = new FormData()\n            data.append(\"file\",image)\n            data.append(\"upload_preset\",\"insta-clone\")\n            data.append(\"cloud_name\",\"sk007\")\n    \n            // for pic upload \n            fetch(\" https://api.cloudinary.com/v1_1/sk007/image/upload\",{\n                method:\"post\",\n                body:data\n                })\n                .then(res=>res.json())\n                .then(data=>{\n\n                    fetch('/updatepic',{\n                        method:\"put\",\n                        headers:{\n                            \"Content-Type\":\"application/json\",\n                            \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n                        },\n                        body:JSON.stringify({\n                            pic:data.url\n                        })\n                    }).then(res=>res.json())\n                    .then(result=>{\n                        console.log(result)\n                        localStorage.setItem(\"user\",JSON.stringify({...state,pic:result.pic}))\n                        dispatch({type:\"UPDATEPIC\",payload:result.pic})\n                        // window.location.reload()\n                    })\n\n                })\n                .catch(err=>{\n                    console.log(err)\n                })\n\n\n        }\n    },[image])\n    \n    const updatePhoto = (filee)=>{\n        setImage(filee)\n       }\n\n               \n        \n    return (\n       \n                    <div style={{ maxWidth: \"550px\", margin: \"0px auto\" }}>\n                        <div style={{\n                            margin: \"18px 0px\",\n                            borderBottom: \"1px solid grey\"\n                        }}>\n                            <div style={{\n                                display: \"flex\",\n                                justifyContent: \"space-around\",\n                                \n                                }}>\n                                <div>\n                                    <img style={{ width: \"160px\", height: \"160px\", borderRadius: \"80px\",border:\"2px solid black\" }}\n                                        src={state?state.pic:\"loading\"}\n                                        alt=\"dp\"\n                                    />\n                                </div>\n                                <div>\n                                    <h4>{state ? state.name : \"loading...\"}</h4>\n                                    <h5>{state ? state.email : \"loading...\"}</h5>\n                                    <div style={{\n                                        display: \"flex\",\n                                        justifyContent: \"space-between\",\n                                        width: \"108%\"\n                                    }}>\n                                        <h6>{mypics?mypics.length:\"loading...\"} Post</h6>\n\n                                        <h6>{state ? state.followers.length : \"loading...\"} Follower</h6>\n                                        <h6>{state ? state.following.length : \"loading...\"} Follow</h6>\n\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"file-field input-field\" style={{margin:\"10px\"}}>\n                                <div className=\"btn .#6a1b9a purple darken-3\">\n                                    <span>Update Pic</span>\n                                    <input type=\"file\" onChange={(e)=>updatePhoto(e.target.files[0])}/>\n                                </div>\n                                <div className=\"file-path-wrapper\">\n                                    <input className=\"file-path validate\" type=\"text\" />\n                                </div>\n                            </div>\n                               \n                        </div>\n                        <div  className=\"row\">\n                                <div className=\"col s12\">\n                                    <ul ref={searchModal} class=\"tabs\">\n                                        <li   id=\"mp\"  className=\"tab col s6 \">\n                                            <a className=\"active\" href=\"#myposts\">\n                                            <i className=\"material-icons\"\n                                                        style={{ float: \"center\" }}\n                                                        \n                                            >border_all</i>\n                                            </a>\n                                        </li>\n                                        <li id=\"mb\" className=\"tab col s6\">\n                                            <a  href=\"#mysaved\">\n                                            <i className=\"material-icons\"\n                                                        style={{ float: \"center\" }}\n                                                        \n                                            >collections_bookmark</i>\n                                            </a>\n                                        </li>\n                                        \n                                    </ul>\n                                </div>\n\n                                <div id=\"myposts\" className=\"col s12\">\n                                    <div className=\"gallery\">\n                            \n                                        {\n                                                mypics.map(item => {\n                                                    return (\n                                                        <img key={item._id} className=\"item\" src={item.photo} alt={item.title} style={{margin:\"3px\"}} />\n                                                    )\n                                                })\n                                            }\n\n                                    </div>\n                                </div>\n\n                                <div id=\"mysaved\" className=\"col s12\">\n                                    <div className=\"gallery\">\n                                \n                                        {state\n                                            ?\n                                               state.bookmark.map(item => {\n                                                    return (\n                                                        <img key={item._id} className=\"item\" src={item.photo} alt={item.title} style={{margin:\"3px\"}}/>\n                                                    )\n                                                })\n                                            :\n                                            <h3>loading..</h3>\n                                        }\n                                    </div>\n                                </div>\n                               \n                        </div>\n                        \n                    </div>\n                   \n\n    )\n}\nexport default Profile","import React,{useState, useEffect, useContext} from 'react'\nimport {UserContext} from '../../App'\nimport {useParams} from 'react-router-dom'\nconst UserProfile = ()=>{\n\n    const [userProfile, setProfile] = useState(null)\n    const [showfollow, setShowFollow] = useState(true)\n    \n    const {state, dispatch} = useContext(UserContext)\n    const {userid} = useParams()\n\n    // const [showfollow, setShowFollow] = useState(state?!state.following.includes(userid):true)\n    \n   \n    // console.log(userid)\n    useEffect(()=>{\n\n        \n        fetch(`/user/${userid}`,{\n            headers:{\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n            }\n        }).then(res=>res.json())\n        .then(result=>{\n            // console.log(result)\n           \n            setProfile(result)\n\n        })\n\n        \n\n    },[])\n\n    const followUser = ()=>{\n\n        fetch('/follow',{\n            method: \"put\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n            },\n            body: JSON.stringify({\n                followId:userid\n            })\n        }).then(res=>res.json())\n        .then(data=>{\n            // console.log(data)\n            dispatch({type:\"UPDATE\",payload:{following:data.following,followers:data.followers}})\n            localStorage.setItem(\"user\",JSON.stringify(data))\n            setProfile((prevState)=>{\n                return{\n                    ...prevState,\n                    user:{\n                        ...prevState.user,\n                        followers:[...prevState.user.followers,data._id]\n                    }\n                }\n            })\n            setShowFollow(false)\n        })\n    }\n\n    const UnfollowUser = ()=>{\n\n        fetch('/unfollow',{\n            method: \"put\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n            },\n            body: JSON.stringify({\n                unfollowId:userid\n            })\n        }).then(res=>res.json())\n        .then(data=>{\n            // console.log(data)\n            dispatch({type:\"UPDATE\",payload:{following:data.following,followers:data.followers}})\n            localStorage.setItem(\"user\",JSON.stringify(data))\n\n            \n            setProfile((prevState)=>{\n                const newFollowers = prevState.user.followers.filter(item=>item !== data._id)\n                return{\n                    ...prevState,\n                    user:{\n                        ...prevState.user,\n                        followers:newFollowers\n                    }\n                }\n            })\n           setShowFollow(true)\n\n\n        })\n    }\n    \n    function check(list, id)\n    {\n        return !(list.some(item=>item===id))\n    }\n\n\n    return(\n       \n        <>\n        {\n        userProfile && state?\n        <div style={{maxWidth:\"550px\", margin: \"0px auto\"}}>\n            \n            <div style={{\n                display:\"flex\",\n                justifyContent:\"space-around\",\n                margin:\"18px 0px\",\n                borderBottom:\"1px solid grey\"\n            }}>\n                <div>\n                    <img style={{width:\"160px\", height:\"160px\", borderRadius:\"80px\",border:\"2px solid black\"}}\n                    src={userProfile.user.pic}\n                    alt=\"dp\"\n                    />\n                </div>\n                <div>\n                    <h4>{userProfile.user.name}</h4>\n                    <h6>{userProfile.user.email}</h6>\n                    <div style={{\n                        display:\"flex\",\n                        justifyContent:\"space-between\",\n                        width:\"108%\"\n                    }}>\n                        <h6>{userProfile.post.length} Post</h6>\n                        <h6>{userProfile.user.followers.length} Follower</h6>\n                        <h6>{userProfile.user.following.length} Follow</h6>\n                    </div>\n                    {check(userProfile.user.followers, state._id)?\n                        <button style={{\n                            margin:\"10px\"\n                        }} className=\"btn waves-effect waves-light .#6a1b9a purple darken-3\" onClick={()=>followUser()}>\n                        Follow                    \n                        </button>\n                    :\n                        <button style={{\n                            margin:\"10px\"\n                        }} className=\"btn waves-effect waves-light .#6a1b9a purple darken-3\" onClick={()=>UnfollowUser()}>\n                        UnFollow                    \n                        </button>\n                    }\n                    \n                   \n                </div>\n            </div>\n            <div className=\"gallery\">\n                {\n                    userProfile.post.map(item=>{\n                        return(\n                            <img key={item._id} className=\"item\" src={item.photo} alt={item.title}/>\n                        )\n                    })\n                }\n\n           \n            \n            \n\n            </div>\n        </div>\n        :<h2>loading...</h2>\n        }\n        </>\n    )\n}\nexport default UserProfile","import React,{useState, useContext} from 'react'\nimport {Link, useHistory} from 'react-router-dom'\nimport {UserContext} from '../../App'\nimport M from 'materialize-css'\nconst Signin = ()=>{\n\n    const {state, dispatch} = useContext(UserContext)\n    const history = useHistory()\n    \n    const [password, setPassword] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n\n\n    const PostData = ()=>{\n\n        if(!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email))\n            return M.toast({html: \"invalid email\" ,classes:\"#c62828 red darken-3\"})\n\n        fetch(\"/signin\",{\n            method:\"post\",\n            headers:{\n                \"Content-Type\":\"application/json\"\n            },\n            body:JSON.stringify({\n                password,\n                email\n            })\n        }).then(res=>res.json()).then(data=>{\n            console.log(data)\n            if(data.error){\n                M.toast({html: data.error,classes:\"#c62828 red darken-3\"})\n            }\n            else{\n                localStorage.setItem(\"jwt\",data.token)\n                localStorage.setItem(\"user\",JSON.stringify(data.user)) \n                dispatch({type:\"USER\",payload:data.user})\n                M.toast({html:\"Signed In success\",classes:\"#388e3c green darken-2\"})\n                history.push('/')\n            }\n        }).catch(err=>{\n            console.log(err)\n        })\n    }\n\n\n    return(\n        <div className = 'mycard'>\n            <div className=\"card auth-card input-field\">\n                <h2>apnaInsta</h2>\n                <input \n                type=\"text\" \n                placeholder=\"Email\"\n                value={email}\n                onChange = {(e)=>setEmail(e.target.value)}\n                />\n                <input \n                type=\"password\" \n                placeholder=\"Password\" \n                value={password}\n                onChange = {(e)=>setPassword(e.target.value)}\n                />\n                <button className=\"btn waves-effect waves-light .#6a1b9a purple darken-3\" onClick={()=>PostData()}>\n                    Login\n                    \n                </button>\n                <h4>\n                    <Link to=\"/signup\">Need Account ? </Link>\n                </h4>\n                <h6>\n                    <Link to=\"/reset\">Forgot password ?</Link>\n                </h6>\n            </div>\n        </div>\n    )\n}\nexport default Signin","import React,{useState, useEffect} from 'react'\nimport {Link, useHistory} from 'react-router-dom'\nimport M from 'materialize-css'\nconst Signup = ()=>{\n    const history = useHistory()\n    const [name, setName] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n    const [image,setImage] = useState(\"\")\n    const [url,setUrl] = useState(undefined)\n\n    useEffect(()=>{\n        if(url)\n        {\n            uploadFields()\n        }\n    },[url])\n\n    const uploadPic = ()=>{\n        const data = new FormData()\n        data.append(\"file\",image)\n        data.append(\"upload_preset\",\"insta-clone\")\n        data.append(\"cloud_name\",\"sk007\")\n\n        // for pic upload \n        fetch(\" https://api.cloudinary.com/v1_1/sk007/image/upload\",{\n            method:\"post\",\n            body:data\n            })\n            .then(res=>res.json())\n            .then(data=>{\n                // console.log(data)\n                setUrl(data.url)\n            })\n            .catch(err=>{\n                console.log(err)\n            })\n    }\n\n    const uploadFields=()=>{\n\n        if(!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email))\n        return M.toast({html: \"invalid email\" ,classes:\"#c62828 red darken-3\"})\n\n        fetch(\"/signup\",{\n            method:\"post\",\n            headers:{\n                \"Content-Type\":\"application/json\"\n            },\n            body:JSON.stringify({\n                name,\n                password,\n                email,\n                pic:url\n            })\n        }).then(res=>res.json()).then(data=>{\n            console.log(data)\n            if(data.error){\n                M.toast({html: data.error,classes:\"#c62828 red darken-3\"})\n            }\n            else{\n                M.toast({html:data.message,classes:\"#388e3c green darken-2\"})\n                    history.push('/signin')\n            }\n        }).catch(err=>{\n            console.log(err)\n        })\n    }\n\n    const PostData = ()=>{\n\n        if(image)\n        {\n            uploadPic()\n        }\n        else{\n            uploadFields()\n        }\n       \n    }\n\n\n    return(\n        <div className = 'mycard'>\n            <div className=\"card auth-card input-field\">\n                <h2>apnaInsta</h2>\n                <input \n                type=\"text\" \n                placeholder=\"Name\"\n                value={name}\n                onChange = {(e)=>setName(e.target.value)}\n                />\n                <input \n                type=\"text\" \n                placeholder=\"Email\"\n                value={email}\n                onChange = {(e)=>setEmail(e.target.value)}\n                />\n                <input \n                type=\"password\" \n                placeholder=\"Password\" \n                value={password}\n                onChange = {(e)=>setPassword(e.target.value)}\n                />\n                <div className=\"file-field input-field\">\n                    <div className=\"btn .#6a1b9a purple darken-3\">\n                        <span>Upload Pic</span>\n                        <input type=\"file\" onChange={(e)=>setImage(e.target.files[0])}/>\n                    </div>\n                    <div className=\"file-path-wrapper\">\n                        <input className=\"file-path validate\" type=\"text\" />\n                    </div>\n                </div>\n                <button className=\"btn waves-effect waves-light .#6a1b9a purple darken-3\" onClick={()=>PostData()}>\n                    Sign Up\n                    \n                </button>\n                <h6>\n                    <Link to=\"/signin\">Already have an Account ? </Link>\n                </h6>\n            </div>\n        </div>\n    )\n}\nexport default Signup","import React,{useState, useEffect} from 'react'\nimport {useHistory} from 'react-router-dom'\nimport M from 'materialize-css'\nconst CreatePost = ()=>{\n\n    const history = useHistory()\n    \n    const [body, setBody] = useState(\"\")\n    const [title, setTitle] = useState(\"\")\n    const [image, setImage] = useState(\"\")\n    const [url, setUrl] = useState(\"\")\n\n    useEffect(()=>{\n        if(url)\n        {\n            // for post \n            fetch(\"/createpost\",{\n                    method:\"post\",\n                    headers:{\n                        \"Content-Type\":\"application/json\",\n                        \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n                    },\n                    body:JSON.stringify({\n                        title,\n                        body,\n                        pic:url\n\n                    })\n            }).then(res=>res.json()).then(data=>{\n                \n                    if(data.error){\n                        M.toast({html: data.error,classes:\"#c62828 red darken-3\"})\n                    }\n                    else{\n                        M.toast({html:\"created post successfully\",classes:\"#388e3c green darken-2\"})\n                            history.push('/')\n                    }\n                }).catch(err=>{\n                    console.log(err)\n            })\n        }   \n    }, [url])\n\n    const postDetails = ()=>{\n        const data = new FormData()\n        data.append(\"file\",image)\n        data.append(\"upload_preset\",\"insta-clone\")\n        data.append(\"cloud_name\",\"sk007\")\n\n        // for pic upload \n        fetch(\" https://api.cloudinary.com/v1_1/sk007/image/upload\",{\n            method:\"post\",\n            body:data\n            })\n            .then(res=>res.json())\n            .then(data=>{\n                // console.log(data)\n                setUrl(data.url)\n            })\n            .catch(err=>{\n                console.log(err)\n            })\n        \n       \n    }\n    \n\n\n    return(\n        <div className='card input-filed' style={{margin:\"30px auto\", maxWidth: \"500px\", padding: \"20px\", textAlign: \"center\"}}>\n            <input \n            type='text' \n            placeholder=\"Title\"\n            value={title}\n            onChange = {(e)=>setTitle(e.target.value)}\n            />\n            <input \n            type='text' \n            placeholder=\"Body\"\n            value={body}\n            onChange = {(e)=>setBody(e.target.value)}\n            />\n            <div className=\"file-field input-field\">\n                <div className=\"btn .#6a1b9a purple darken-3\">\n                    <span>Upload Image</span>\n                    <input type=\"file\" onChange={(e)=>setImage(e.target.files[0])}/>\n                </div>\n                <div className=\"file-path-wrapper\">\n                    <input className=\"file-path validate\" type=\"text\" />\n                </div>\n               \n            </div>\n            <button className=\"btn waves-effect waves-light .#6a1b9a purple darken-3\" onClick={()=>postDetails()}>\n                    Post    \n            </button>\n        </div>\n\n    )\n}\n\nexport default CreatePost","import React, { useState, useEffect, useContext } from 'react'\nimport { UserContext } from '../../App'\nimport {Link} from 'react-router-dom'\nconst  SubscribedPosts = () => {\n\n    const [data, setData] = useState([])\n    const { state, dispatch } = useContext(UserContext)\n    useEffect(() => {\n\n        // console.log(\"into into\")\n        fetch(\"/getsubpost\", {\n            headers: {\n\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n            }\n\n        }).then(res => res.json())\n            .then(result => {\n                // console.log(\"hiii \",result)\n                setData(result.posts)\n                \n            })\n    }, [])\n\n    const likePost = (id) => {\n\n        fetch('/like', {\n            method: \"put\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n            },\n            body: JSON.stringify({\n                postId: id\n            })\n        }).then(res => res.json())\n            .then(result => {\n                // console.log(result)\n                const newData = data.map(item => {\n                    if (item._id === result._id) {\n                        return result\n                    }\n                    else {\n                        return item\n                    }\n                })\n                setData(newData)\n            }).catch(err => {\n                console.log(err)\n            })\n    }\n\n    const UnlikePost = (id) => {\n\n        fetch('/unlike', {\n            method: \"put\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n            },\n            body: JSON.stringify({\n                postId: id\n            })\n        }).then(res => res.json())\n            .then(result => {\n                // console.log(result)\n                const newData = data.map(item => {\n                    if (item._id === result._id) {\n                        return result\n                    }\n                    else {\n                        return item\n                    }\n                })\n                setData(newData)\n            }).catch(err => {\n                console.log(err)\n            })\n    }\n\n\n    const makeComment = (text, postId) => {\n\n        fetch('/comment', {\n            method: \"put\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n            },\n            body: JSON.stringify({\n                postId,\n                text\n            })\n\n        }).then(res => res.json())\n            .then(result => {\n                // console.log(result)\n                const newData = data.map(item => {\n                    if (item._id === result._id) {\n                        return result\n                    }\n                    else {\n                        return item\n                    }\n                })\n                setData(newData)\n\n            }).catch(err => {\n                console.log(err)\n            })\n    }\n\n    const deletePost = (postId) => {\n\n    \n        fetch(`/deletepost/${postId}`, {\n            method: \"delete\",\n            headers: {\n\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n            }\n\n        }).then(res => res.json())\n            .then(result => {\n                // console.log(result)\n                const newData = data.filter(item => {\n                    return item._id !== result._id\n                })\n                setData(newData)\n            })\n    }\n\n    const deleteComment = (postId,commentId) =>{\n\n        fetch('/deletecomment', {\n            method: \"put\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n            },\n            body: JSON.stringify({\n                postId,\n                commentId\n            })\n\n        }).then(res => res.json())\n            .then(result => {\n                // console.log(result)\n                const newData = data.map(item => {\n                    if (item._id === result._id) {\n                        return result\n                    }\n                    else {\n                        return item\n                    }\n                })\n                setData(newData)\n\n            }).catch(err => {\n                console.log(err)\n            })\n    }\n\n    return (\n        <div className=\"home\">\n            {\n                data.map(item => {\n                    return (\n\n                        <div className=\"card home-card\" key={item._id}>\n                            <h5 style={{padding:\"6px\",borderBottom: \"1px solid grey\"}}> \n                                    <img style={{ \n                                        width: \"40px\", \n                                        height: \"40px\", \n                                        borderRadius: \"80px\", \n                                        margin:\"1px 4px -7px 3px\",\n                                        border:\"2px solid black\",\n                                       \n                                    }}\n                                                src={item.postedBy.pic}\n                                                alt=\"dp\"\n                                    />\n\n                                    <Link to={item.postedBy._id !== state._id?\"/profile/\"+item.postedBy._id:\"/profile\"}>{item.postedBy.name}</Link>\n                                                              \n                                {\n                                    item.postedBy._id === state._id &&\n                                    <i className=\"material-icons\"\n                                        style={{ float: \"right\" }}\n                                        onClick={() => deletePost(item._id)}\n                                    >delete</i>\n                                }\n                            </h5>\n\n                            <div className=\"card-image\">\n                                <img key={item._id} src={item.photo} alt={item.title} />\n                            </div>\n                            <div className=\"card-content\">\n                                \n                                {item.likes.includes(state._id)\n                                    ?\n                                    <i className=\"material-icons\"\n                                        onClick={() => UnlikePost(item._id)}\n                                    >thumb_down</i>\n                                    :\n\n                                    <i className=\"material-icons\"\n                                        onClick={() => likePost(item._id)}\n                                    >thumb_up</i>\n                                }\n\n\n                                <h6>{item.likes.length} likes</h6>\n                                <h6>{item.title}</h6>\n                                <p>{item.body}</p>\n                                {\n                                    item.comments.map(record => {\n                                    \n                                        return (\n                                            <h6 key={record.key}><span style={{ fontWeight: \"500\" }}>{record.postedBy.name}</span>\n                                             {\n                                                record.postedBy._id === state._id &&\n                                                <i className=\"material-icons\"\n                                                    style={{ float: \"right\" }}\n                                                    onClick={() => deleteComment(item._id,record._id)}\n                                                >delete</i>\n                                            } {record.text}\n                                             </h6>\n                                            \n                                        )\n                                    })\n                                }\n                                <form onSubmit={(e) => {\n                                    e.preventDefault()\n                                    makeComment(e.target[0].value, item._id)\n                                }}>\n                                    <input type=\"text\" placeholder=\"add a comment!!\" />\n                                </form>\n                            </div>\n                        </div>\n\n                    )\n                })\n            }\n\n\n\n        </div>\n    )\n}\nexport default  SubscribedPosts","import React,{useState, useContext} from 'react'\nimport {Link, useHistory} from 'react-router-dom'\nimport M from 'materialize-css'\nconst Reset = ()=>{\n\n    \n    const history = useHistory()\n    \n    \n    const [email, setEmail] = useState(\"\")\n\n\n    const PostData = ()=>{\n\n        if(!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email))\n            return M.toast({html: \"invalid email\" ,classes:\"#c62828 red darken-3\"})\n\n        fetch(\"/reset-password\",{\n            method:\"post\",\n            headers:{\n                \"Content-Type\":\"application/json\"\n            },\n            body:JSON.stringify({\n                email\n            })\n        }).then(res=>res.json()).then(data=>{\n            // console.log(data)\n            if(data.error){\n                M.toast({html: data.error,classes:\"#c62828 red darken-3\"})\n            }\n            else{\n               \n                M.toast({html:data.message,classes:\"#388e3c green darken-2\"})\n                history.push('/signin')\n            }\n        }).catch(err=>{\n            console.log(err)\n        })\n    }\n\n\n    return(\n        <div className = 'mycard'>\n            <div className=\"card auth-card input-field\">\n                <h2>apnaInsta</h2>\n                <input \n                type=\"text\" \n                placeholder=\"Email\"\n                value={email}\n                onChange = {(e)=>setEmail(e.target.value)}\n                />\n                \n                <button className=\"btn waves-effect waves-light .#6a1b9a purple darken-3\" onClick={()=>PostData()}>\n                    Reset Password\n                    \n                </button>\n               \n            </div>\n        </div>\n    )\n}\nexport default Reset","import React,{useState, useContext} from 'react'\nimport {Link, useHistory, useParams} from 'react-router-dom'\n\nimport M from 'materialize-css'\nconst Newpassword = ()=>{\n\n    \n    const history = useHistory()\n    \n    const [password, setPassword] = useState(\"\")\n    const {token} = useParams()\n    console.log(token)\n\n    const PostData = ()=>{\n\n        \n\n        fetch(\"/new-password\",{\n            method:\"post\",\n            headers:{\n                \"Content-Type\":\"application/json\"\n            },\n            body:JSON.stringify({\n                password,\n                token\n                \n            })\n        }).then(res=>res.json()).then(data=>{\n            // console.log(data)\n            if(data.error){\n                M.toast({html: data.error,classes:\"#c62828 red darken-3\"})\n            }\n            else{\n               \n                M.toast({html:data.message,classes:\"#388e3c green darken-2\"})\n                history.push('/signin')\n            }\n        }).catch(err=>{\n            console.log(err)\n        })\n    }\n\n\n    return(\n        <div className = 'mycard'>\n            <div className=\"card auth-card input-field\">\n                <h2>apnaInsta</h2>\n                \n                <input \n                type=\"password\" \n                placeholder=\"Enter New Password\" \n                value={password}\n                onChange = {(e)=>setPassword(e.target.value)}\n                />\n                <button className=\"btn waves-effect waves-light .#6a1b9a purple darken-3\" onClick={()=>PostData()}>\n                    Update Password\n                    \n                </button>\n                \n            </div>\n        </div>\n    )\n}\nexport default Newpassword","import React,{useState, useContext} from 'react'\nimport {Link, useHistory, useParams} from 'react-router-dom'\n\nimport M from 'materialize-css'\nconst VerifyEmail = ()=>{\n\n    \n    const history = useHistory()\n    \n    \n    const {token} = useParams()\n    // console.log(token)\n\n    const PostData = ()=>{\n\n        \n\n        fetch(\"/email-verify\",{\n            method:\"post\",\n            headers:{\n                \"Content-Type\":\"application/json\"\n            },\n            body:JSON.stringify({\n                \n                token\n                \n            })\n        }).then(res=>res.json()).then(data=>{\n            // console.log(data)\n            if(data.error){\n                M.toast({html: data.error,classes:\"#c62828 red darken-3\"})\n            }\n            else{\n               \n                M.toast({html:data.message,classes:\"#388e3c green darken-2\"})\n                history.push('/signin')\n            }\n        }).catch(err=>{\n            console.log(err)\n        })\n    }\n\n\n    return(\n        <div className = 'mycard'>\n            <div className=\"card auth-card input-field\">\n                <h2>apnaInsta</h2>\n                \n                \n                <button className=\"btn waves-effect waves-light .#6a1b9a purple darken-3\" onClick={()=>PostData()}>\n                    Verify your Email\n                    \n                </button>\n                \n            </div>\n        </div>\n    )\n}\nexport default VerifyEmail","export const initialState = null\n\nexport const reducer = (state, action)=>{\n    if(action.type === 'USER'){\n        return action.payload\n    }\n    if(action.type===\"CLEAR\")\n    {\n        return null\n    }\n    if(action.type===\"UPDATE\")\n    {\n        return {\n            ...state,\n            followers:action.payload.followers,\n            following:action.payload.following\n        }\n    }\n    if(action.type===\"UPDATEPIC\")\n    {\n        return {\n            ...state,\n            pic:action.payload\n        }\n    }\n    if(action.type === \"UPDATEBM\")\n    {\n        return {\n            ...state,\n            bookmark:action.payload.bookmark\n        }\n    }\n    return state\n}","import React, { useEffect, createContext, useReducer, useContext } from 'react';\nimport NavBar from './components/Navbar'\nimport './App.css'\n\nimport { BrowserRouter, Route, Switch, useHistory} from 'react-router-dom'\n\nimport Home from './components/screens/Home'\nimport Profile from './components/screens/Profile'\nimport UserProfile from './components/screens/UserProfile'\nimport Signin from './components/screens/SignIn'\nimport Signup from './components/screens/Signup'\nimport CreatePost from './components/screens/CreatePost'\nimport SubscribedPosts from './components/screens/SubscribesUserPosts'\nimport Reset from './components/screens/Reset'\nimport Newpassword from './components/screens/Newpassword'\nimport VerifyEmail from './components/screens/VerifyEmail'\n\n\n\nimport { reducer, initialState } from './reducers/userReducer'\n\nexport const UserContext = createContext()\n\nconst Routing = () => {\n\n  const history = useHistory()\n  const { state, dispatch } = useContext(UserContext)\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem(\"user\"))\n    if (user) {\n      dispatch({ type: \"USER\", payload: user })\n\n    }\n    else {\n      if (!history.location.pathname.startsWith('/reset') && !history.location.pathname.startsWith('/emailverify'))\n        history.push('/signin')\n    }\n  }, [])\n\n  return (\n    <Switch>\n\n      <Route exact path=\"/\">\n        <Home />\n      </Route>\n\n      <Route path=\"/signup\">\n        <Signup />\n      </Route>\n\n      <Route path=\"/signin\">\n        <Signin />\n      </Route>\n      \n      <Route exact path=\"/profile\">\n        \n        <Profile />\n      </Route>\n     \n\n      <Route path=\"/profile/:userid\">\n        <UserProfile />\n      </Route>\n\n      <Route path=\"/createpost\">\n        <CreatePost />\n      </Route>\n\n      <Route path=\"/subscribedposts\">\n        < SubscribedPosts />\n      </Route>\n\n      <Route exact path=\"/reset\">\n        < Reset />\n      </Route>\n\n      <Route path=\"/reset/:token\">\n        < Newpassword />\n      </Route>\n\n      <Route path=\"/emailverify/:token\">\n        < VerifyEmail />\n      </Route>\n\n    </Switch>\n  )\n}\n\nfunction App() {\n\n  const [state, dispatch] = useReducer(reducer, initialState)\n  return (\n    <UserContext.Provider value={{ state, dispatch }}>\n      <BrowserRouter>\n        <NavBar />\n        <Routing />\n      </BrowserRouter>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}